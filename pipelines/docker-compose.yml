networks:
  webui_stack_network:
    external: true
services:
  pipelines:
    build: 
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PORTKEY_API_KEY=${PORTKEY_API_KEY}
      - POETRY_VIRTUALENVS_PATH=/app/${ENVS_PATH}/${VENV_NAME}
      - POETRY_VIRTUALENVS_CREATE=true
      - POETRY_VIRTUALENVS_IN_PROJECT=false
      - HOST=${HOST}
      - PORT=${PORT}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
    networks :
      - webui_stack_network
    volumes:
      - pipelines:/app/pipelines
      - ${CUSTOM_PWD}/pyproject.toml:/app/pyproject.toml
      - ${CUSTOM_PWD}/poetry.lock:/app/poetry.lock
      - venv:/app/${ENVS_PATH}/${VENV_NAME}

    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      bash -c "
        echo 'PATH: $PATH' && \

        if [ ! -f poetry.lock ] || [ pyproject.toml -nt poetry.lock ]; then
          echo 'Installing dependencies...' && \
          poetry env use python3.12 && \
          poetry install --no-interaction -vv --no-root;
        else
          echo 'Dependencies are up to date';
        fi && \
        echo 'Current environment variables:' && \
        printenv && \
        echo 'Starting pipelines...' && \
        poetry run uvicorn main:app --host "$HOST" --port "$PORT" --forwarded-allow-ips '*' --reload 
      "

volumes:
  pipelines:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: '${CUSTOM_PWD}/pipelines'



  venv:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: '${CUSTOM_PWD}/${ENVS_PATH}'